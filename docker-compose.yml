version: '3'
services:

    nginx:
      build: ./docker/nginx
      container_name: "nginx"
      ports:
          - "80:80"
          - "8000:8000"

    postgres:
      image: postgres:11.1-alpine
      container_name: "postgres"
      volumes:
          - ./postgres:/var/lib/postgresql/data
      ports:
          - "5432:5432"
      environment:
          - POSTGRES_USER=root
          - POSTGRES_PASSWORD=password
      restart: always
      tty: true

    pgweb:
      build: ./docker/pgweb
      container_name: "pgweb"
      ports:
          - "8081:8081"
      environment:
          - DATABASE_URL=postgres://root:password@postgres:5432/sample?sslmode=disable
      links:
          - postgres:postgres
      restart: always
      depends_on:
          - postgres
      command: wait.sh

    redis:
      image: redis:5.0.3-alpine
      container_name: "redis"
      volumes:
          - ./redis:/data
      ports:
          - "6379:6379"
      restart: always
      tty: true

    redis-commander:
      container_name: "redis-commander"
      build: ./docker/redis-commander
      links:
          - redis:redis
      ports:
          - "8080:8080"
      command: --redis-host redis --port 8080

    nuxt:
      build: ./docker/nuxt
      container_name: "nuxt"
      volumes:
          - ./nuxt:/var/www/html/nuxt
      expose:
          - "3000"

    rails:
      build: ./docker/rails
      container_name: "rails"
      environment:
        DB_USER: root        
        DB_PASS: password
        DB_HOST: postgres
        REDIS_URL: redis://redis:6379      
      volumes:
          - ./app:/usr/src/app
          - bundle_install:/usr/local/bundle          
      command: "bundle exec rails server --binding 0.0.0.0 --port 9000"
      expose:
          - "9000"
      stdin_open: true          
      tty: true

    mailcatcher:
      build: ./docker/mailcatcher
      container_name: 'mailcatcher'
      ports:
          - "1080:1080"
          - "1025:1025"
      restart: always

volumes:
    postgres-data:
      driver: local
    pgweb-data:
      driver: local
    bundle_install:
      driver: local      
